[project]
name = "llsc-backend"
version = "0.1.0"
description = "Default template for PDM package"
authors = [
    {name = "uwblueprint", email = "matthewwang@uwblueprint.org"},
]
dependencies = [
    "fastapi[standard]>=0.115.0",
    "sqlalchemy>=2.0.35",
    "alembic>=1.13.3",
    "ruff>=0.6.7",
    "pyright>=1.1.381",
    "python-dotenv>=1.0.1",
    "firebase-admin>=6.8.0",
    "pytest>=8.3.3",
    "inflection>=0.5.1",
    "pre-commit>=4.0.0",
    "psycopg2>=2.9.9",
    "Faker>=30.8.2",
    "pandas>=2.2.3",
    "boto3>=1.35.71",
    "pytest-asyncio>=0.25.3",
]
requires-python = "==3.12.*"
readme = "README.md"
license = {text = "MIT"}


[tool.pdm]
distribution = false

[tool.pdm.scripts]
dev = "fastapi dev app/server.py"
precommit = "pre-commit run"
precommit-install = "pre-commit install"
dc-down = "docker-compose down -v"
dc-up = "docker-compose up -d"
docker-db = {composite = ["dc-down", "dc-up"]}
db-dev = {composite = ["docker-db", "dev"]}
revision = "alembic revision --autogenerate"
upgrade = "alembic upgrade head"
tests = "pytest -v"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
pythonpath = ["."]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/__pycache__/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101"]  # Skip assert_used test

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "httpx>=0.24.0",
    "pytest-cov>=4.0.0",
]
lint = [
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "types-requests>=2.31.0",
]
dev = [
    "python-dotenv>=1.0.0",
]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "W", "A", "PLC", "PLE", "PLW", "I"]
ignore = ["E501"]  # Line too long (handled by formatter)

[tool.mypy]
python_version = "3.12"
warn_return_any = false  # Disabled for now - too many existing issues
warn_unused_configs = true
disallow_untyped_defs = false  # Keep false until ready for strict typing
ignore_missing_imports = true
allow_untyped_calls = true
allow_untyped_defs = true
allow_incomplete_defs = true
check_untyped_defs = false
disallow_any_generics = false
disallow_subclassing_any = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_optional = false
