"""create forms schema tables

Revision ID: f4225af5f02c
Revises: c9bc2b4d1036
Create Date: 2025-06-29 15:28:37.734725

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f4225af5f02c'
down_revision: Union[str, None] = 'c9bc2b4d1036'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('experiences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('forms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('intake', 'ranking', 'secondary', 'become_volunteer', 'become_participant', name='form_type'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qualities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('treatments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_experiences',
    sa.Column('user_data_id', sa.UUID(), nullable=True),
    sa.Column('experience_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.id'], ),
    sa.ForeignKeyConstraint(['user_data_id'], ['user_data.id'], )
    )
    op.create_table('user_treatments',
    sa.Column('user_data_id', sa.UUID(), nullable=True),
    sa.Column('treatment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['treatment_id'], ['treatments.id'], ),
    sa.ForeignKeyConstraint(['user_data_id'], ['user_data.id'], )
    )
    op.create_table('form_submissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('form_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('answers', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ranking_preferences',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('quality_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quality_id'], ['qualities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'quality_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ranking_preferences')
    op.drop_table('form_submissions')
    op.drop_table('user_treatments')
    op.drop_table('user_experiences')
    op.drop_table('user_data')
    op.drop_table('treatments')
    op.drop_table('qualities')
    op.drop_table('forms')
    op.drop_table('experiences')
    # ### end Alembic commands ###
