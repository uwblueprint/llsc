"""change ScheduleState to ScheduleStatus

Revision ID: df571b763807
Revises: 991416bdc3f6
Create Date: 2025-02-03 21:09:12.497053

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "df571b763807"
down_revision: Union[str, None] = "991416bdc3f6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "schedule_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_constraint("schedules_state_id_fkey", "schedules", type_="foreignkey")
    op.drop_table("schedule_states")
    op.add_column("schedules", sa.Column("status_id", sa.Integer(), nullable=False))
    op.create_foreign_key(None, "schedules", "schedule_status", ["status_id"], ["id"])
    op.drop_column("schedules", "state_id")

    op.bulk_insert(
        sa.table(
            "schedule_status",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(length=80), nullable=False),
        ),
        [
            {"id": 1, "name": "PENDING_VOLUNTEER_RESPONSE"},
            {"id": 2, "name": "PENDING_PARTICIPANT_RESPONSE"},
            {"id": 3, "name": "SCHEDULED"},
            {"id": 4, "name": "COMPLETED"},
        ],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "schedules",
        sa.Column("state_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "schedules", type_="foreignkey")
    op.create_foreign_key("schedules_state_id_fkey", "schedules", "schedule_states", ["state_id"], ["id"])
    op.drop_column("schedules", "status_id")
    op.create_table(
        "schedule_states",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=80), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="schedule_states_pkey"),
    )
    op.execute("DELETE FROM schedule_status WHERE id IN (1, 2, 3, 4)")
    op.drop_table("schedule_status")

    # ### end Alembic commands ###
