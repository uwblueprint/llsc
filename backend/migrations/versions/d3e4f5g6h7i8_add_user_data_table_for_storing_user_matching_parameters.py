"""Add user_data table for storing user matching parameters

Revision ID: d3e4f5g6h7i8
Revises: c9bc2b4d1036
Create Date: 2024-11-25 12:00:00.000000

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d3e4f5g6h7i8"
down_revision: Union[str, None] = "c9bc2b4d1036"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_data",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("postal_code", sa.String(length=10), nullable=True),
        sa.Column("province", sa.String(length=50), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("language", sa.String(length=50), nullable=True),
        sa.Column("criminal_record_status", sa.Boolean(), nullable=True),
        sa.Column("blood_cancer_status", sa.Boolean(), nullable=True),
        sa.Column("caregiver_status", sa.Boolean(), nullable=True),
        sa.Column("caregiver_type", sa.String(length=100), nullable=True),
        sa.Column("diagnostic", sa.String(length=200), nullable=True),
        sa.Column("date_of_diagnosis", sa.Date(), nullable=True),
        sa.Column("gender_identity", sa.String(length=50), nullable=True),
        sa.Column("pronouns", sa.String(length=50), nullable=True),
        sa.Column("ethnicity", sa.String(length=100), nullable=True),
        sa.Column("marital_status", sa.String(length=50), nullable=True),
        sa.Column("children_status", sa.Boolean(), nullable=True),
        sa.Column("treatment", sa.Text(), nullable=True),
        sa.Column("experience", sa.Text(), nullable=True),
        sa.Column("preferences", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id")
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_data")
    # ### end Alembic commands ### 